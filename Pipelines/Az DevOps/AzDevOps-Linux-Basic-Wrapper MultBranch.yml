# Para testar, recomendo a utilização do projeto NodeGoat
# Disponivel em: https://github.com/IGDEXE/NodeGoat

trigger:
- master

pool:
  vmImage: ubuntu-latest

variables:
  veracodeAppProfile: $(Build.DefinitionName)
  caminhoPacote: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
  veracodeTeams: "DEMOs"

steps:
- task: CmdLine@2
  inputs:
    script: |
      zip -r $(caminhoPacote) . -x '*.svg' '*.pdf' '*.mp4' '*.webm' '*.gif' '*.jpg' '*.ico' '.git/*'
  displayName: 'Criando pacote para analise'

- script: |
    curl -o veracode-wrapper.jar https://repo1.maven.org/maven2/com/veracode/vosp/api/wrappers/vosp-api-wrappers-java/23.4.11.2/vosp-api-wrappers-java-23.4.11.2.jar
  displayName: 'Download Veracode Wrapper'
- script: |
    if [ $(Build.SourceBranchName) == 'main' ]; then
        java -jar veracode-wrapper.jar -vid $(VERACODE_API_KEY_ID) -vkey $(VERACODE_API_KEY_SECRET) -action uploadandscan -appname $(veracodeAppProfile) -createprofile true  -version $(build.buildNumber) -filepath $(caminhoPacote) -scanpollinginterval 30 -scantimeout 55 -teams "$(veracodeTeams)"
      else
        java -jar veracode-wrapper.jar -vid $(VERACODE_API_KEY_ID) -vkey $(VERACODE_API_KEY_SECRET) -action uploadandscan -appname $(veracodeAppProfile) -createprofile true  -version $(build.buildNumber) -filepath $(caminhoPacote) -scanpollinginterval 30 -scantimeout 55 -teams "$(veracodeTeams)" -createsandbox true -sandboxname "$(Build.SourceBranchName)"
      fi
  displayName: 'Veracode U&S'